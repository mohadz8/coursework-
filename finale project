import tkinter as tk
from tkinter import messagebox
import random

class NumberGuessingGame:
    def __init__(self, root):
        self.root = root
        self.root.title("Number Guessing Game")
        self.root.geometry("400x300")
        self.root.resizable(False, False)

        self.secret_number = random.randint(1, 100)
        self.attempts_left = 7

        self.create_widgets()

    def create_widgets(self):
        self.title_label = tk.Label(self.root, text="Guess a number between 1 and 100", font=("Arial", 14))
        self.title_label.pack(pady=20)

        self.entry = tk.Entry(self.root, font=("Arial", 12), justify="center")
        self.entry.pack(pady=10)

        self.submit_button = tk.Button(self.root, text="Submit Guess", command=self.check_guess)
        self.submit_button.pack(pady=10)

        self.feedback_label = tk.Label(self.root, text="", font=("Arial", 12))
        self.feedback_label.pack(pady=5)

        self.attempts_label = tk.Label(self.root, text=f"Attempts Left: {self.attempts_left}", font=("Arial", 12))
        self.attempts_label.pack(pady=5)

    def check_guess(self):
        try:
            guess = int(self.entry.get())
            if guess < 1 or guess > 100:
                self.feedback_label.config(text="Please enter a number between 1 and 100.")
                return

            if guess == self.secret_number:
                messagebox.showinfo("Congratulations!", f"You guessed the number correctly!\nIt was {self.secret_number}.")
                self.reset_game()
            else:
                self.attempts_left -= 1
                if self.attempts_left == 0:
                    messagebox.showinfo("Game Over", f"You're out of attempts!\nThe number was {self.secret_number}.")
                    self.reset_game()
                else:
                    if guess < self.secret_number:
                        self.feedback_label.config(text="Too low! Try again.")
                    else:
                        self.feedback_label.config(text="Too high! Try again.")
                    self.attempts_label.config(text=f"Attempts Left: {self.attempts_left}")

        except ValueError:
            self.feedback_label.config(text="Invalid input! Please enter a number.")

    def reset_game(self):
        self.secret_number = random.randint(1, 100)
        self.attempts_left = 7
        self.entry.delete(0, tk.END)
        self.feedback_label.config(text="")
        self.attempts_label.config(text=f"Attempts Left: {self.attempts_left}")

if __name__ == "__main__":
    root = tk.Tk()
    game = NumberGuessingGame(root)
    root.mainloop()
